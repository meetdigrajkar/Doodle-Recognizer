{"version":3,"sources":["components/RedirectButton.js","components/RedirectIconButton.js","components/TopBar.js","components/CanvasContext.js","components/Categories.js","components/Graph.js","components/Canvas.js","components/DisplayMessage.js","components/Draw.js","components/About.js","components/Home.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["RedirectButton","render","history","Button","color","onClick","push","props","url","text","React","Component","RedirectIconButton","IconButton","Icon","style","fontSize","alt","src","icon","TopBar","state","flexGrow","AppBar","position","background","Toolbar","CanvasContext","createContext","CanvasProvider","children","useState","isDrawing","setIsDrawing","canvasRef","useRef","contextRef","Provider","value","prepareCanvas","canvas","current","width","window","innerWidth","height","innerHeight","borderRadius","boxShadow","context","getContext","scale","lineCap","strokeStyle","lineWidth","startDrawing","nativeEvent","offsetX","offsetY","beginPath","moveTo","finishDrawing","closePath","clearCanvas","fillStyle","fillRect","draw","lineTo","stroke","saveCanvas","toDataURL","CATEGORY_LIST","COLORS","data","name","count","Graph","BarChart","this","length","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Bar","fill","map","entry","index","Cell","strokeWidth","algorithm","Canvas","useContext","graphData","setGraphData","setAlgorithm","useEffect","FormControl","marginTop","NativeSelect","onChange","event","target","FormHelperText","Grid","container","justify","spacing","item","onMouseDown","onMouseUp","onMouseMove","ref","margin","variant","imgData","obj","imgBase64","axios","post","then","res","myObject","JSON","parse","console","log","catch","error","request","DisplayMessage","category","getRandomCategory","bind","Math","floor","random","setState","Typography","paddingTop","fontFamily","marginRight","Draw","About","className","textAlign","Home","Main","path","exact","component","to","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb167b2a.chunk.js","sourcesContent":["import { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nclass RedirectButton extends React.Component {\r\n  render() {\r\n    return (\r\n      <Route\r\n        render={({ history }) => (\r\n          <Button\r\n            color=\"inherit\"\r\n            // style={{ color: \"black\", fontVariant: \"unicase\" }}\r\n            onClick={() => {\r\n              history.push(this.props.url);\r\n            }}\r\n          >\r\n            {this.props.text}\r\n          </Button>\r\n        )}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default RedirectButton;\r\n","import { IconButton, Icon } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nclass RedirectIconButton extends React.Component {\r\n  render() {\r\n    return (\r\n      <Route\r\n        render={({ history }) => (\r\n          <IconButton\r\n            onClick={() => {\r\n              history.push(this.props.url);\r\n            }}\r\n          >\r\n            <Icon style={{ fontSize: 30 }}>\r\n              <img alt=\"edit\" src={this.props.icon} />\r\n            </Icon>\r\n          </IconButton>\r\n        )}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default RedirectIconButton;\r\n","import React from \"react\";\r\nimport { Toolbar, AppBar } from \"@material-ui/core\";\r\nimport RedirectButton from \"./RedirectButton\";\r\nimport RedirectIconButton from \"./RedirectIconButton\";\r\n\r\nclass TopBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ flexGrow: 1 }}>\r\n        <AppBar position=\"static\" style={{ background: \"lightblue\" }}>\r\n          <Toolbar style={{ background: \"#3298dc\" }}>\r\n            <RedirectIconButton url=\"/home\" icon=\"favicon.ico\" />\r\n            <RedirectButton url=\"/draw\" text=\"Draw\" />\r\n            <RedirectButton url=\"/about\" text=\"About\" />\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopBar;\r\n","import React, { useContext, useRef, useState } from \"react\";\r\nconst CanvasContext = React.createContext();\r\n\r\nexport const CanvasProvider = ({ children }) => {\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const canvasRef = useRef(null);\r\n  const contextRef = useRef(null);\r\n\r\n  const prepareCanvas = () => {\r\n    const canvas = canvasRef.current;\r\n    canvas.width = window.innerWidth * 0.35 * 2;\r\n    canvas.height = window.innerHeight;\r\n    canvas.style.width = `${window.innerWidth * 0.35}px`;\r\n    canvas.style.height = `${window.innerHeight * 0.5}px`;\r\n    // canvas.style.border = \"1px solid #000\";\r\n    canvas.style.borderRadius = \"16px\";\r\n    canvas.style.boxShadow =\r\n      \"rgb(145 158 171 / 24%) 0px 0px 2px 0px, rgb(145 158 171 / 24%) 0px 16px 32px -4px\";\r\n\r\n    const context = canvas.getContext(\"2d\");\r\n    context.scale(2, 2);\r\n    context.lineCap = \"round\";\r\n    context.strokeStyle = \"black\";\r\n    context.lineWidth = 2.5;\r\n    contextRef.current = context;\r\n  };\r\n\r\n  const startDrawing = ({ nativeEvent }) => {\r\n    const { offsetX, offsetY } = nativeEvent;\r\n    contextRef.current.beginPath();\r\n    contextRef.current.moveTo(offsetX, offsetY);\r\n    setIsDrawing(true);\r\n  };\r\n\r\n  const finishDrawing = () => {\r\n    contextRef.current.closePath();\r\n    setIsDrawing(false);\r\n  };\r\n\r\n  const draw = ({ nativeEvent }) => {\r\n    if (!isDrawing) {\r\n      return;\r\n    }\r\n    const { offsetX, offsetY } = nativeEvent;\r\n    contextRef.current.lineTo(offsetX, offsetY);\r\n    contextRef.current.stroke();\r\n  };\r\n\r\n  const clearCanvas = () => {\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext(\"2d\");\r\n    context.fillStyle = \"white\";\r\n    context.fillRect(0, 0, canvas.width, canvas.height);\r\n  };\r\n\r\n  const saveCanvas = () => {\r\n    const canvas = canvasRef.current;\r\n    var imgData = canvas.toDataURL();\r\n    return imgData;\r\n  };\r\n\r\n  return (\r\n    <CanvasContext.Provider\r\n      value={{\r\n        canvasRef,\r\n        contextRef,\r\n        prepareCanvas,\r\n        startDrawing,\r\n        finishDrawing,\r\n        clearCanvas,\r\n        draw,\r\n        saveCanvas,\r\n      }}\r\n    >\r\n      {children}\r\n    </CanvasContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCanvas = () => useContext(CanvasContext);\r\n","export const CATEGORY_LIST = [\r\n  \"Bear\",\r\n  \"Bee\",\r\n  \"Bird\",\r\n  \"Cat\",\r\n  \"Cow\",\r\n  \"Crocodile\",\r\n  \"Dog\",\r\n  \"Elephant\",\r\n  \"Giraffe\",\r\n  \"Horse\",\r\n];\r\n\r\nexport const COLORS = [\r\n  \"#E74C3C\",\r\n  \"#8E44AD\",\r\n  \"#3498DB\",\r\n  \"#16A085\",\r\n  \"#2ECC71\",\r\n  \"#F39C12\",\r\n  \"#D35400\",\r\n  \"#BDC3C7\",\r\n  \"#7F8C8D\",\r\n  \"#2C3E50\",\r\n];\r\n","import React from \"react\";\r\n// import { Bar } from \"@reactchartjs/react-chart.js\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Cell,\r\n} from \"recharts\";\r\nimport { COLORS } from \"./Categories\";\r\n\r\nconst data = [\r\n  {\r\n    name: \"Bear\",\r\n    count: 0,\r\n  },\r\n  {\r\n    name: \"Bee\",\r\n    count: 0,\r\n  },\r\n  {\r\n    name: \"Bird\",\r\n    count: 0,\r\n  },\r\n  {\r\n    name: \"Cat\",\r\n    count: 0,\r\n  },\r\n  {\r\n    name: \"Cow\",\r\n    count: 0,\r\n  },\r\n  {\r\n    name: \"Crocodile\",\r\n    count: 0,\r\n  },\r\n  {\r\n    name: \"Dog\",\r\n    count: 0,\r\n  },\r\n  {\r\n    name: \"Elephant\",\r\n    count: 0,\r\n  },\r\n  {\r\n    name: \"Giraffe\",\r\n    count: 0,\r\n  },\r\n  {\r\n    name: \"Horse\",\r\n    count: 0,\r\n  },\r\n];\r\n\r\nclass Graph extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: data,\r\n      render: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <BarChart\r\n          width={window.innerWidth * 0.4}\r\n          height={window.innerHeight * 0.54}\r\n          data={this.props.data.length === 0 ? data : this.props.data}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Bar dataKey=\"count\" fill=\"#000000\">\r\n            {this.props.data.length !== 0 &&\r\n              this.props.data.map((entry, index) => (\r\n                <Cell\r\n                  key={`cell-${index}`}\r\n                  fill={COLORS[index]}\r\n                  strokeWidth={index === 2 ? 4 : 1}\r\n                />\r\n              ))}\r\n          </Bar>\r\n        </BarChart>\r\n        {this.props.algorithm === \"1\" ? \"Count\" : \"Percentage\"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Graph;\r\n","import {\r\n  Button,\r\n  Grid,\r\n  FormHelperText,\r\n  NativeSelect,\r\n  FormControl,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useCanvas } from \"./CanvasContext\";\r\nimport axios from \"axios\";\r\nimport Graph from \"./Graph\";\r\n\r\nexport function Canvas() {\r\n  const {\r\n    canvasRef,\r\n    prepareCanvas,\r\n    startDrawing,\r\n    finishDrawing,\r\n    saveCanvas,\r\n    draw,\r\n    clearCanvas,\r\n  } = useCanvas();\r\n\r\n  const [graphData, setGraphData] = useState([]);\r\n  const [algorithm, setAlgorithm] = useState(\"1\");\r\n\r\n  useEffect(() => {\r\n    prepareCanvas();\r\n  }, []);\r\n\r\n  const request = (imgData, algorithm) => {\r\n    var obj = {\r\n      imgBase64: imgData,\r\n      algorithm: algorithm,\r\n    };\r\n    axios\r\n      .post(\"https://doodlerecognizer.herokuapp.com/home/api/doodle/\", obj)\r\n      .then((res) => {\r\n        var myObject = JSON.parse(res.data);\r\n        console.log(myObject);\r\n        obj = [\r\n          {\r\n            name: \"Bear\",\r\n            count: myObject[0],\r\n          },\r\n          {\r\n            name: \"Bee\",\r\n            count: myObject[1],\r\n          },\r\n          {\r\n            name: \"Bird\",\r\n            count: myObject[2],\r\n          },\r\n          {\r\n            name: \"Cat\",\r\n            count: myObject[3],\r\n          },\r\n          {\r\n            name: \"Cow\",\r\n            count: myObject[4],\r\n          },\r\n          {\r\n            name: \"Crocodile\",\r\n            count: myObject[5],\r\n          },\r\n          {\r\n            name: \"Dog\",\r\n            count: myObject[6],\r\n          },\r\n          {\r\n            name: \"Elephant\",\r\n            count: myObject[7],\r\n          },\r\n          {\r\n            name: \"Giraffe\",\r\n            count: myObject[8],\r\n          },\r\n          {\r\n            name: \"Horse\",\r\n            count: myObject[9],\r\n          },\r\n        ];\r\n        console.log(obj);\r\n        setGraphData(obj);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const recognizeClick = () => {\r\n    var imgData = saveCanvas();\r\n    request(imgData, algorithm);\r\n  };\r\n\r\n  const clearCanvasClick = () => {\r\n    setGraphData([]);\r\n    clearCanvas();\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setAlgorithm(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl style={{ marginTop: \"5vh\" }}>\r\n        <NativeSelect value={algorithm} onChange={handleChange}>\r\n          <option value={1}>OpenCV Patched-Base Template Matching</option>\r\n          <option value={2}>Neural Network Convolution</option>\r\n        </NativeSelect>\r\n        <FormHelperText>Select Doodle Recognition Algorithm</FormHelperText>\r\n      </FormControl>\r\n      <Grid\r\n        container\r\n        justify=\"center\"\r\n        style={{ flexGrow: 1, marginTop: \"5vh\" }}\r\n        spacing={0}\r\n      >\r\n        <Grid item>\r\n          <div>\r\n            <canvas\r\n              onMouseDown={startDrawing}\r\n              onMouseUp={finishDrawing}\r\n              onMouseMove={draw}\r\n              ref={canvasRef}\r\n            />\r\n          </div>\r\n\r\n          <Button\r\n            style={{ margin: \"5px\" }}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={recognizeClick}\r\n          >\r\n            Recognize\r\n          </Button>\r\n          <Button\r\n            style={{ margin: \"5px\" }}\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n            onClick={clearCanvasClick}\r\n          >\r\n            Clear Canvas\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <div\r\n            style={{\r\n              height: \"50vh\",\r\n            }}\r\n          >\r\n            <Graph data={graphData} algorithm={algorithm}></Graph>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Typography, Grid, IconButton } from \"@material-ui/core\";\r\nimport ReplayIcon from \"@material-ui/icons/Replay\";\r\nimport { CATEGORY_LIST } from \"./Categories\";\r\n\r\nclass DisplayMessage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      category: CATEGORY_LIST[0],\r\n    };\r\n    this.getRandomCategory = this.getRandomCategory.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getRandomCategory();\r\n  }\r\n\r\n  getRandomCategory() {\r\n    var index;\r\n    do {\r\n      index = Math.floor(Math.random() * CATEGORY_LIST.length);\r\n    } while (CATEGORY_LIST[index] === this.state.category);\r\n\r\n    this.setState({ category: CATEGORY_LIST[index] });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Typography\r\n          style={{\r\n            paddingTop: \"10px\",\r\n            color: \"#3298dc\",\r\n            fontFamily: \"wearedimdam\",\r\n          }}\r\n          variant=\"h2\"\r\n        >\r\n          Welcome to Doodle Recognizer\r\n        </Typography>\r\n        <Grid container justify=\"center\" style={{ flexGrow: 1 }} spacing={0}>\r\n          <Grid item>\r\n            <Typography\r\n              style={{\r\n                marginRight: \"5px\",\r\n                marginTop: \"5px\",\r\n                fontFamily: \"rainday\",\r\n              }}\r\n              variant=\"h6\"\r\n            >\r\n              Draw {this.state.category}!\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <IconButton onClick={this.getRandomCategory}>\r\n              <ReplayIcon style={{ color: \"#3298dc\" }} fontSize=\"small\" />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DisplayMessage;\r\n","import React from \"react\";\r\nimport { Canvas } from \"./Canvas\";\r\nimport DisplayMessage from \"./DisplayMessage\";\r\n\r\nclass Draw extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <DisplayMessage />\r\n        <Canvas />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Draw;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nclass About extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Typography\r\n          style={{\r\n            paddingTop: \"10px\",\r\n            color: \"#3298dc\",\r\n            fontFamily: \"wearedimdam\",\r\n          }}\r\n          variant=\"h2\"\r\n        >\r\n          About Doodle Recognizer\r\n        </Typography>\r\n\r\n        <section\r\n          className=\"section\"\r\n          style={{ textAlign: \"start\", margin: \"20px\" }}\r\n        >\r\n          <div className=\"box\">\r\n            <div className=\"content is-normal has-text-primary-light\">\r\n              <h2 className=\"has-text-danger\">Algorithms Supported</h2>\r\n              <p>\r\n                The doodle recognizer project uses two algorithms neural\r\n                networks convolution and OpenCV patch based template matching to\r\n                recognize the doodle drawn by the user.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport \"../styles/style.css\";\r\nimport { CATEGORY_LIST } from \"./Categories\";\r\n\r\nclass Home extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Typography\r\n          style={{\r\n            paddingTop: \"10px\",\r\n            color: \"#3298dc\",\r\n            fontFamily: \"wearedimdam\",\r\n          }}\r\n          variant=\"h2\"\r\n        >\r\n          Home Doodle Recognizer\r\n        </Typography>\r\n        <section\r\n          className=\"section\"\r\n          style={{ textAlign: \"start\", margin: \"20px\" }}\r\n        >\r\n          <div className=\"box\">\r\n            <div className=\"content is-normal has-text-primary-light\">\r\n              <h2 className=\"has-text-danger\">Our system</h2>\r\n              <p>\r\n                Draw a doodle from a category and we will identify parts of it,\r\n                and give you data on which category your doodle was from! The\r\n                categories below are what we support at this moment.\r\n              </p>\r\n              <ul className=\"has-text-warning\">\r\n                {CATEGORY_LIST.map((category) => (\r\n                  <li key={category}> {category}</li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport TopBar from \"./TopBar\";\r\nimport Draw from \"./Draw\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport About from \"./About\";\r\nimport Home from \"./Home\";\r\n\r\nclass Main extends React.Component {\r\n  render() {\r\n    return (\r\n      <div style={{ height: \"100vh\" }}>\r\n        <Router>\r\n          <TopBar />\r\n          <Switch>\r\n            <Route path=\"/home\" exact component={() => <Home />}></Route>\r\n            <Route path=\"/draw\" component={() => <Draw />}></Route>\r\n            <Route path=\"/about\" component={() => <About />}></Route>\r\n            <Route render={() => <Redirect to=\"/home\" />} />\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import Main from \"./components/Main\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Main></Main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { CanvasProvider } from \"./components/CanvasContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CanvasProvider>\n      <App />\n    </CanvasProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}